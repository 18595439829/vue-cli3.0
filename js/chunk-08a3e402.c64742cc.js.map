{"version":3,"sources":["webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./src/views/ol/ShiLiangTuCeng.vue?1f04","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/style/Text.js","webpack:///src/views/ol/ShiLiangTuCeng.vue","webpack:///./src/views/ol/ShiLiangTuCeng.vue?f650","webpack:///./src/views/ol/ShiLiangTuCeng.vue","webpack:///./src/views/ol/ShiLiangTuCeng.vue?2b8b","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./src/views/ol/ShiLiangTuCeng.vue?9a09"],"names":["OverlayPositioning","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_LEFT","TOP_CENTER","TOP_RIGHT","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay_Overlay","BaseObject","Overlay","options","call","this","id","insertFirst","undefined","stopEvent","element","document","createElement","className","css","style","position","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","visible","mapPostrenderListenerKey","Object","events","ol_Object","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","setPosition","__proto__","prototype","create","constructor","getElement","get","getId","getMap","getOffset","getPosition","getPositioning","dom","appendChild","map","MapEventType","POSTRENDER","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","panIntoView","set","setMap","getTargetElement","mapRect","getRect","getSize","overlayRect","margin","extent","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","Math","abs","center","getView","getCenter","centerPx","getPixelFromCoordinate","newCenterPx","animate","getCoordinateFromPixel","duration","easing","size","box","getBoundingClientRect","offsetX","left","window","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","mapSize","updateRenderedPosition","right","round","offsetWidth","bottom","offsetHeight","getOptions","__webpack_exports__","__webpack_require__","flags","f","RegExp","configurable","_vm","_h","$createElement","_c","_self","class","$style","attrs","_v","ref","src","imgurl","alt","staticRenderFns","_defineProperty","obj","key","value","define_property_default","enumerable","writable","Feature_FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","source","opt_options","readProjection","featureProjection","adaptOptions","ol_obj","getLastExtent","getType","util","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","geometry","format_Feature","transformWithOptions","write","transformed","proj","Array","isArray","clone","transform","decimals","power","pow","coordinates","i","ii","length","applyTransform","JSONFeature_JSONFeature","FeatureFormat","JSONFeature","FormatType","JSON","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","format_JSONFeature","GeometryCollection_GeometryCollection","Geometry","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","EventType","CHANGE","changed","geometryCollection","setGeometries","closestPointXY","x","y","closestPoint","minSquaredDistance","ol_extent","getExtent","geometries","containsXY","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","toString","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","push","simplifiedGeometryCollection","setGeometriesArray","GeometryType","GEOMETRY_COLLECTION","intersectsExtent","isEmpty","rotate","angle","anchor","scale","sx","opt_sy","opt_anchor","transformFn","translate","deltaX","deltaY","disposeInternal","geom_Geometry","clonedGeometries","geom_GeometryCollection","GeoJSON_GeoJSON","GeoJSON","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","type","properties","GeoJSON_readGeometry","Feature","setGeometryName","setGeometry","setId","setProperties","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","projection","crs","asserts","getGeometry","GeoJSON_writeGeometry","getProperties","getGeometryName","objects","POINT","readPointGeometry","LINE_STRING","readLineStringGeometry","POLYGON","readPolygonGeometry","MULTI_POINT","readMultiPointGeometry","MULTI_LINE_STRING","readMultiLineStringGeometry","MULTI_POLYGON","readMultiPolygonGeometry","readGeometryCollectionGeometry","Error","Point","LineString","MultiLineString","MultiPoint","MultiPolygon","Polygon","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","CIRCLE","getCoordinates","rightHanded","format_GeoJSON","DEFAULT_FILL_COLOR","Text_Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","Fill","color","maxAngle_","maxAngle","PI","placement_","placement","TextPlacement","overflow_","overflow","stroke_","stroke","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","ShiLiangTuCengvue_type_script_lang_js_","name","data","_this","Koala_default","a","Style","Stroke","width","highlightStyle","vectorLayer","Vector","source_Vector","url","format","_style","_x","apply","arguments","featureOverlay","highlight","mounted","_this2","initMap","$nextTick","on","evt","console","log","xy","methods","Map","target","layers","Tile","OSM","view","View","zoom","controls","layerXYZ","XYZ","addLayer","marker","$refs","kaola","addOverlay","displayFeatureInfo","forEachFeatureAtPixel","info","getElementById","innerHTML","getSource","removeFeature","addFeature","ol_ShiLiangTuCengvue_type_script_lang_js_","injectStyles","context","ShiLiangTuCengvue_type_style_index_0_lang_less_module_true_","locals","component","componentNormalizer","module","exports","anObject","$flags","DESCRIPTORS","TO_STRING","$toString","define","fn","R","concat","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_0_0_node_modules_css_loader_index_js_ref_10_oneOf_0_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_0_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_0_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ShiLiangTuCeng_vue_vue_type_style_index_0_lang_less_module_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_0_0_node_modules_css_loader_index_js_ref_10_oneOf_0_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_0_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_0_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ShiLiangTuCeng_vue_vue_type_style_index_0_lang_less_module_true___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-08a3e402.c64742cc.js","sourcesContent":["/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{class:_vm.$style['map'],attrs:{\"id\":\"map\"}}),_c('div',{attrs:{\"id\":\"info\"}},[_vm._v(\" \")]),_c('div',{ref:\"kaola\",class:_vm.$style['kaola']},[_c('img',{attrs:{\"src\":_vm.imgurl,\"alt\":\"\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","<template>\n  <div>\n    <div id=\"map\" :class=\"$style['map']\"></div>\n    <div id=\"info\">&nbsp;</div>\n    <div ref=\"kaola\" :class=\"$style['kaola']\">\n      <img :src=\"imgurl\" alt=\"\">\n    </div>\n  </div>\n</template>\n<script>\nimport Map from \"ol/Map.js\";\nimport View from \"ol/View.js\";\nimport Overlay from 'ol/Overlay.js';\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM.js\";\nimport XYZ from \"ol/source/XYZ.js\";\nimport { fromLonLat, transform } from \"ol/proj.js\";\nimport GeoJSON from \"ol/format/GeoJSON.js\";\nimport VectorLayer from \"ol/layer/Vector.js\";\nimport VectorSource from \"ol/source/Vector.js\";\nimport { Fill, Stroke, Style, Text } from \"ol/style.js\";\n\nimport imgurl from '@/assets/img/Koala.jpg';\n\nexport default {\n  name: \"ShiLiangTuCeng\",\n  data() {\n    return {\n      map: null,\n      imgurl,\n      style: new Style({\n        fill: new Fill({\n          color: \"rgba(255, 255, 255, 0.6)\"\n        }),\n        stroke: new Stroke({\n          color: \"#319FD3\",\n          width: 1\n        }),\n        text: new Text({\n          font: \"12px Calibri,sans-serif\",\n          fill: new Fill({\n            color: \"#000\"\n          }),\n          stroke: new Stroke({\n            color: \"#fff\",\n            width: 3\n          })\n        })\n      }),\n      highlightStyle: new Style({\n        stroke: new Stroke({\n          color: \"#f00\",\n          width: 1\n        }),\n        fill: new Fill({\n          color: \"rgba(255,0,0,0.1)\"\n        }),\n        text: new Text({\n          font: \"12px Calibri,sans-serif\",\n          fill: new Fill({\n            color: \"#000\"\n          }),\n          stroke: new Stroke({\n            color: \"#f00\",\n            width: 3\n          })\n        })\n      }),\n      vectorLayer: new VectorLayer({\n        source: new VectorSource({\n          url: \"data/geojson/countries.geojson\",\n          format: new GeoJSON()\n        }),\n        style: feature => {\n          this.style.getText().setText(feature.get(\"name\"));\n          return style;\n        }\n      }),\n      featureOverlay: new VectorLayer({\n        source: new VectorSource(),\n        map: this.map,\n        style: feature => {\n          this.highlightStyle.getText().setText(feature.get(\"name\"));\n          return highlightStyle;\n        }\n      }),\n      highlight: null,\n      map: null\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.$nextTick(() => {\n      this.map.on(\"rendercomplete\", evt => {\n        console.log(evt);\n        // if (evt.dragging) {\n        //   return;\n        // }\n        // 获取鼠标的像素点位\n        // let pixel = this.map.getEventPixel(evt.originalEvent);\n        // this.displayFeatureInfo(pixel);\n      });\n\n      this.map.on(\"click\", evt => {\n        let xy = this.map.getCoordinateFromPixel(evt.pixel)\n        console.log(evt, xy, fromLonLat(xy));\n        // this.displayFeatureInfo(evt.pixel);\n      });\n    });\n  },\n  methods: {\n    initMap() {\n      this.map = new Map({\n        target: \"map\",\n        layers: [\n          new TileLayer({\n            source: new OSM()\n          })\n        ],\n        view: new View({\n          // center: fromLonLat([120.15, 30.28]),\n          center: [13379936.9339429, 3528007.173944956],\n          zoom: 18\n        }),\n        controls: []\n      });\n      let layerXYZ = new TileLayer({\n        source: new XYZ()\n      });\n      this.map.addLayer(layerXYZ);\n       let marker = new Overlay({\n        position: [13379936.9339429, 3528007.173944956],\n        positioning: 'center-center',\n        element: this.$refs.kaola,\n        stopEvent: false\n      });\n      this.map.addOverlay(marker)\n    },\n    displayFeatureInfo(pixel) {\n      let feature = this.map.forEachFeatureAtPixel(pixel, function(feature) {\n        return feature;\n      });\n      let info = document.getElementById(\"info\");\n      if (feature) {\n        info.innerHTML = feature.getId() + \": \" + feature.get(\"name\");\n      } else {\n        info.innerHTML = \"&nbsp;\";\n      }\n\n      if (feature !== this.highlight) {\n        if (this.highlight) {\n          this.featureOverlay.getSource().removeFeature(this.highlight);\n        }\n        if (feature) {\n          this.featureOverlay.getSource().addFeature(feature);\n        }\n        this.highlight = feature;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" module>\n.map {\n  width: 100%;\n  height: 500px;\n}\n.kaola {\n  width: 100px;\n  &  > img {\n    width: 100%;\n  } \n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShiLiangTuCeng.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShiLiangTuCeng.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ShiLiangTuCeng.vue?vue&type=template&id=59e00355&\"\nimport script from \"./ShiLiangTuCeng.vue?vue&type=script&lang=js&\"\nexport * from \"./ShiLiangTuCeng.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ShiLiangTuCeng.vue?vue&type=style&index=0&lang=less&module=true&\"\n\n\n\n\nfunction injectStyles (context) {\n  \n  this[\"$style\"] = (style0.locals || style0)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  \n)\n\nexport default component.exports","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"ShiLiangTuCeng_map_msPsY\",\"kaola\":\"ShiLiangTuCeng_kaola_1pxXg\"};","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-0-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-0-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-0-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-0-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShiLiangTuCeng.vue?vue&type=style&index=0&lang=less&module=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-0-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-0-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-0-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-0-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShiLiangTuCeng.vue?vue&type=style&index=0&lang=less&module=true&\""],"sourceRoot":""}