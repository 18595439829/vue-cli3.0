{"version":3,"sources":["webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/source/Source.js"],"names":["__webpack_exports__","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","module","exports","rbush","default","quickselect","__webpack_require__","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","i","length","calcBBox","node","toBBox","distBBox","children","k","p","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","n","compare","mid","stack","pop","push","prototype","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","m","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","xMargin","_allDistMargin","yMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","d","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","IMAGE","VECTOR","altShiftKeysOnly","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_has_js__WEBPACK_IMPORTED_MODULE_3__","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","event","target","getTargetElement","document","activeElement","button","tagName","pointerEvent","Object","undefined","pointerType","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","tmpTileCoord","TileGrid_TileGrid","options","zoomFactor","minZoom","resolutions_","resolutions","asserts","array","origins","ii","zoomFactor_","maxZoom","origin_","origin","origins_","extent","ol_extent","tileSizes_","tileSizes","tileSize_","tileSize","common","extent_","fullTileRanges_","tmpSize_","sizes","map","size","z","tileRange","TileRange","calculateTileRanges_","forEachTileCoord","zoom","callback","getTileRangeForExtentAndZ","jj","forEachTileCoordParentTileRange","tileCoord","opt_this","opt_tileRange","opt_extent","x","y","tileCoordExtent","getTileCoordExtent","floor","call","getExtent","getMaxZoom","getMinZoom","getOrigin","getResolution","getResolutions","getTileCoordChildTileRange","getTileRangeExtent","resolution","ol_size","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","coordinate","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","scale","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","tilecoord","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","math","fullTileRanges","Array","tilegrid_TileGrid","getForProjection","projection","tileGrid","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","center","projectionExtent","extentFromProjection","worldWidth","worldsAway","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","corner","Corner","TOP_LEFT","resolutionsFromExtent","createXYZ","opt_options","xyzOptions","proj","gridOptions","width","maxResolution","half","Units","DEGREES","getMetersPerUnit","createCanvasContext2D","opt_width","opt_height","canvas","createElement","getContext","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","getInteriorPointOfArray","getInteriorPointsOfMultiArray","_array_js__WEBPACK_IMPORTED_MODULE_0__","_contains_js__WEBPACK_IMPORTED_MODULE_1__","flatCoordinates","offset","ends","stride","flatCenters","flatCentersOffset","opt_dest","x1","x2","y1","y2","intersections","r","rr","end","pointX","NaN","maxSegmentLength","segmentLength","abs","isNaN","endss","interiorPoints","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","_boundingExtentXYs","xs","ys","value","dx","dy","extent1","extent2","relationship","extendCoordinates","extendXY","val","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_RIGHT","rotation","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","__proto__","create","constructor","addEventListener","type","listener","listeners","dispatchEvent","evt","propagate","propagationStopped","pendingRemovals","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","ADD","REMOVE","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","source","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","getLayerStatesArray","opt_states","states","getLayerState","getSource","get","getSourceState","getState","UNDEFINED","handleSourceChange_","changed","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","render","set","visible","minResolution","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","_math_js__WEBPACK_IMPORTED_MODULE_0__","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance","i$1","simplifiedEnds","tolerance","round","quantize","dx1","dy1","dx2","dy2","simplifiedEndss","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","eventType","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","bindListener","listenerObj","boundListener","bindTo","callOnce","findListener","opt_setDeleteIndex","deleteIndex","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","opt_once","key","Projection_Projection","code_","code","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","PI","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","METERS","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","tan","epsg3857_toEPSG4326","atan","exp","epsg4326_RADIUS","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","cache","add","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","transform","cloneTransform","identityTransform","addProjection","addProjections","projections","forEach","proj_get","projectionLike","opt_units","pointResolution","getter","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","opt_projection","proj_transform","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","addCommon","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","_extent_js__WEBPACK_IMPORTED_MODULE_0__","outside","wn","POINT","LINE","getKeyZXY","getKey","fromKey","split","Number","hash","withinExtentAndZ","_TileImage_js__WEBPACK_IMPORTED_MODULE_0__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_1__","XYZ","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","transition","attributionsCollapsible","hasArea","ratio","opt_size","toSize","isArray","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","Observable","EventTarget","revision_","getRevision","on","once","un","assign","getValues","var_sources","arguments$1","arguments","TypeError","hasOwnProperty","object","property","values","shared","_color_js__WEBPACK_IMPORTED_MODULE_0__","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","color","colorString","expire","iconImage","setSize","maxCacheSize","centroid","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","PointerInteraction","Interaction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","handleEvent","stopEvent","updateTrackedPointers_","handledUp","handled","preventDefault","isPointerDraggingEvent","id","pointerId","toString","pointerEvents","clientX","clientY","pan","rotate","rotateWithoutConstraints","zoomByDelta","zoomWithoutConstraints","_Object_js__WEBPACK_IMPORTED_MODULE_0__","_easing_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","BaseObject","map_","setActive","getActive","ACTIVE","getMap","active","view","delta","opt_duration","currentCenter","constrainCenter","animate","duration","easing","setCenter","opt_anchor","constrainRotation","currentRotation","getRotation","anchor","constrainResolution","currentResolution","getMinResolution","getMaxResolution","calculateCenterZoom","setResolution","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","Tile_TileLayer","TileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","LayerType","TILE","getPreload","getUseInterimTilesOnError","layer_Layer","ANIMATING","INTERACTING","tmp","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","linearRingsAreOriented","orientLinearRings","reverse","orientLinearRingsArray","_MapEvent_js__WEBPACK_IMPORTED_MODULE_0__","MapBrowserEvent","MapEvent","browserEvent","opt_dragging","opt_frameState","pixel","getEventPixel","getCoordinateFromPixel","dragging","stopPropagation","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","f","entry","value_","key_","newer","older","getKeys","peekLast","peekLastKey","peekFirstKey","replace","prune","XY","XYM","XYZM","_util_js__WEBPACK_IMPORTED_MODULE_0__","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","properties","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","setProperties","state_","getType","state","layer","getOpacity","sourceState","getVisible","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","TRUE","FALSE","VOID","POSTRENDER","MOVESTART","MOVEEND","lineStringLength","LinearRing_LinearRing","SimpleGeometry","LinearRing","opt_layout","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","closest","flat_area","getCoordinates","inflate","getSimplifiedGeometryInternal","simplify","GeometryLayout","GeometryType","LINEAR_RING","intersectsExtent","setLayout","deflate","geom_SimpleGeometry","geom_LinearRing","fromExtent","fromCircle","makeRegular","Polygon_Polygon","Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getFlatCoordinates","getOrientedFlatCoordinates","orient","getEnds","getFlatInteriorPoint","flatCenter","interiorpoint","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","POLYGON","intersectsextent","circle","opt_sides","opt_angle","sides","getStride","getLayout","arrayLength","polygon","getRadius","radius","startAngle","angle","asString","asArray","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","el","body","appendChild","rgb","fromString","MAX_CACHE_SIZE","s","fromStringInternal_","g","exec","hasAlpha","substr","normalize","POINTER_ID","POINTER_TYPE","prepareEvent","_EventSource_js__WEBPACK_IMPORTED_MODULE_0__","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","e","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","l","t","cloneEvent","pd","isPrimary","VECTOR_TILE","EventType","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_EventSource","pointer_MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","pointer_NativeSource","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","Event","which","ev","MouseEvent","pointer_PointerEvent","CLICK_COUNT_TIMEOUT","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","touch","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","pointer_TouchSource","CLONE_PROPS","PointerEventHandler_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","has","registerSource","register_","name","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","ol_events","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserPointerEvent","MapBrowserEventType","updateActivePointers_","handlePointerUp_","isMouseActionButton_","dispose","handlePointerMove_","isMoving_","ol_MapBrowserEventHandler","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","events_EventType","handleTileChange","getTilesLoading","TileState","LOADED","EMPTY","ABORT","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","IDLE","ol_TileQueue","Property","LAYERS","Group_LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","ol_Object","handleLayersChanged_","Collection","unique","getArray","setLayers","handleLayerChange_","getLayers","CollectionEventType","handleLayersAdd_","handleLayersRemove_","layersArray","util","ObjectEventType","PROPERTYCHANGE","collectionEvent","pos","ownLayerState","State","READY","Base","Group","PluggableMap_PluggableMap","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","pixelRatio","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","ol_transform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","position","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","cancelAnimationFrame","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","functions","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getElementById","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","interactionsArray","cont","handlePostRender","tileQueue","hints","viewHints","ViewHint","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","window","removeLayerRenderers","dom","handleViewPropertyChanged_","setAttribute","layerGroup","isRendered","renderSync","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","isDef","getHints","skippedFeatureUids","usedTiles","renderFrame","moveStart","MapEventType","idle","setLayerGroup","setView","skipFeature","computedStyle","parseFloat","unskipFeature","View","ol_PluggableMap","loading","Control_Control","Control","target_","listenerKeys","control_Control","Attribution_Attribution","Attribution","Attribution_render","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","css","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","mapEvent","control_Attribution","Rotate_Rotate","Rotate","Rotate_render","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","setRotation","msTransform","webkitTransform","control_Rotate","Zoom_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","getAnimating","cancelAnimations","control_Zoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","update","lastIndex","firstIndex","atan2","getDistance","getAngle","ol_Kinetic","DoubleClickZoom","DoubleClickZoom_handleEvent","delta_","interaction_Interaction","interaction_DoubleClickZoom","DragPan_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","events_condition","noKinetic_","setHint","Pointer","ol_coordinate","distance","centerpx","dest","interaction_DragPan","DragRotate_DragRotate","DragRotate","lastAngle_","getConstraints","rotationconstraint","theta","interaction_DragRotate","Box_RenderBox","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","ol_Disposable","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","interaction_DragBox","DragZoom_DragZoom","DragZoom","out_","mapExtent","calculateExtent","boxPixelExtent","factor","getResolutionForExtent","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan_KeyboardPan","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom_KeyboardZoom","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","MAX_DELTA","Mode","TRACKPAD","MouseWheelZoom_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","maxDelta","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchRotate","PinchZoom_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","direction","interaction_PinchZoom","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ImageBase_ImageBase","ImageBase","getImage","getPixelRatio","ol_ImageBase","ImageCanvas_ImageCanvas","ImageCanvas","opt_loader","ImageState","loader_","canvas_","error_","getError","handleLoad_","err","LOADING","ol_ImageCanvas","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","context","glContext","render_Event","VectorContext_VectorContext","drawCustom","geometry","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate_CanvasImmediateRenderer","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","flat_transform","localTransform","alpha","globalAlpha","centerX","centerY","setTransform","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","LINE_STRING","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","setLineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","render_canvas","font","textBaseline","fillStyleColor","getColor","colorlike","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Immediate","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","numLayers","layerRenderer","getLayerRenderer","getWrapX","hasFeature","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","renderer_Map","layerRendererConstructors","Map_CanvasMapRenderer","CanvasMapRenderer","insertBefore","childNodes","composeEvent","sx","sy","clearRect","save","prepareFrame","composeFrame","restore","forEachLayerAtCoordinate","ctor","canvas_Map","Layer_LayerRenderer","LayerRenderer","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","getLayer","handleImageChange_","image","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","opt_tileCallback","getTile","useTile","ol_Observable","renderer_Layer","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","offsetX","canvas_Layer","IntermediateCanvas_IntermediateCanvasRenderer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","IntermediateCanvas","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","getProjection","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","VectorRenderType","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","setState","getInterimTile","sourceRevision","getTileGridForProjection","oversampling","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","covered","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","w","h","zs","tileCoordKey","getGutterForProjection","getTileCoord","drawTileImage","gutter","getTileImage","getOpaque","alphaChanged","endTransition","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","drawTextOnPath","text","measure","startM","maxAngle","numChars","previousAngle","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","tmpTransform","Replay_CanvasReplay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","anchorX","anchorY","declutterGroup","originX","originY","snapToPixel","padding","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","repeatSize","translate","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","coords","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","offsetY","strokeKey","strokeWidth","textKey","pathLength","flat_length","textLength","textReplay","textStates","parts","c","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","Replay","ImageReplay_CanvasImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","ImageReplay","LineStringReplay_CanvasLineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextReplay_CanvasTextReplay","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","TextPlacement","flatEnd","flatOffset","o","oo","range","drawChars_","drawTextImage_","align","lines","numLines","widths","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","currentWidth","TextReplay","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","0","fillCircleArrayRowToMiddle","arraySize","error","replayDeclutter","zz","replayData","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","MultiPoint","renderMultiPointGeometry","MultiLineString","renderMultiLineStringGeometry","MultiPolygon","renderMultiPolygonGeometry","GeometryCollection","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","replayGroup","circleReplay","renderFeature","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","simplifiedGeometry","getSimplifiedGeometry","renderGeometry","geometryRenderer","getGeometries","lineStringReplay","polygonReplay","imageReplay","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","TILE_PIXELS","setReplayGroup","found","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","Map","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","TOUCH","POINTER","MSPOINTER","ua","navigator","userAgent","toLowerCase","devicePixelRatio","factory","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","_events_Event_js__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_RADIUS","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","bearing","lon1","dByR","lat","asin","lon","clamp","cosh","squaredSegmentDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","mat","maxRow","maxEl","absValue","coef","angleInRadians","angleInDegrees","AssertionError","message","disable","none","createSnapToN","createSnapToZero","opt_tolerance","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_5__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","opt_sy","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","Tile_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","prev","ol_Tile","ImageTile_ImageTile","ImageTile","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","getBlankImage","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillRect","ol_ImageTile","TileCache_TileCache","TileCache","pruneExceptNewestZ","structs_LRUCache","ol_TileCache","calculateSourceResolution","targetProj","targetCenter","targetResolution","sourceCenter","ol_proj","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","Tile_ReprojTile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","reproj_Tile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","match","startCharCode","stopCharCode","fromCharCode","stop","Tile_TileSource","Source","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","ol_tilegrid","thisProj","getTileCoordForTileUrlFunction","refresh","source_Source","TileSourceEvent","source_Tile","TileEventType","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile_UrlTile","UrlTile","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","source_UrlTile","TileImage_TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","imageTile","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","isRing","opt_tmpPoint","tmpPoint","transformGeom2D","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_Geometry_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","simpleGeometry","binarySearch","haystack","needle","opt_comparator","cmp","comparator","numberSafeCompareFunction","low","high","includes","linearFindNearest","reverseSubArray","extension","arr1","arr2","len1","stableSort","compareFnc","isSorted","opt_func","opt_strict","every","currentVal","res","createExtent","createSnapToResolutions","power","createSnapToPower","opt_maxLevel","oldLevel","newLevel","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MIN_ZOOM","View_View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","setZoom","animationCallback","series","animation","complete","sourceRotation","targetRotation","isNoopAnimation","getInteracting","more","seriesComplete","elapsed","fraction","progress","calculateCenterRotate","filter","Boolean","getSizeFromViewport_","selector","querySelector","metrics","opt_delta","opt_hints","getZoomForResolution","setMaxZoom","setMinZoom","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerOn","hint","returnValue","defaultMaxZoom","defaultZoomFactor","defaultMaxResolution","defaultMinResolution","enableRotation","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","coordinate1","coordinate2","coord1","coord2","reset","setFromArray","invert","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","det","determinant","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","opt_endss","twiceArea","linearRingss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","transform2D","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","easeIn","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","fontFamily","_XYZ_js__WEBPACK_IMPORTED_MODULE_0__","ATTRIBUTION","OSM","disposed_","containsTileRange","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","_MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_0__","getChangeEventType","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","ObjectEvent","oldValue","opt_values","values_","getProperties","notify","opt_silent","unset","changeEventTypeCache","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","LENGTH","CollectionEvent","opt_element","unique_","array_","assertUnique_","updateLength_","getLength","insertAt","elem","removeAt","setAt","opt_except","asColorLike","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","FEET","PIXELS","USFEET","ret","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","setAttributions","attributionLike"],"mappings":"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","file":"js/chunk-fd15ade8.49864673.js","sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.3';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if ((this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) ||\n              this.renderedRevision != sourceRevision) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}